from flask import Flask
from flask import request
from flask import jsonify
import requests
import random
# from flask_sslify import SSLify

app = Flask(__name__)
# sslify = SSLify(app)

TOKEN = ''
URL = 'https://api.telegram.org/bot{0}/'.format(TOKEN)
# https://api.telegram.org/bot<TOKEN>/setWebhook?url=https://e6864a52.ngrok.io

TEXT_INSTRUCTIONS ='''
–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —ç—Ç–æ —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç \n
–¥–ª—è –∑–∞–∫–∞–∑–∞ —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç–æ–≤.\n
\n
–ß—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑:\n

1) –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /list\n

2) –í—ã–±–∏—Ä–∞–µ—Ç–µ –Ω–æ–º–µ—Ä —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç–∞\n
–∏–∑ —Å–ø–∏—Å–∫–∞.\n
 \n
–ù–∞–ø—Ä–∏–º–µ—Ä: –ö—É—Ä–∞–≥–∞ —Å –Ω–æ–º–µ—Ä–æ–º 26\n
–∏ —É–º–Ω–æ–∂–∞–µ—Ç–µ –Ω–∞ 200 –≥—Ä–∞–º–º:\n
26*200\n
–µ—Å–ª–∏ –≤–∞–º –Ω—É–∂–µ–Ω –Ω–∞–ø—Ä–∏–º–µ—Ä –µ—â–µ\n
–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ (36) 100 –≥—Ä–∞–º–º\n
—Ç–æ –ø–∏—à–∏—Ç–µ:\n
+ 36*100\n
–í –∏—Ç–æ–≥–µ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n
1*200+2*100\n
3) –ü–æ—Å–ª–µ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ\n 
–í—ã –∑–∞–∫–∞–∑–∞–ª–∏:\n
–ö—É—Ä–∞–≥–∞ 200 –≥—Ä\n
–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ 100 –≥—Ä\n 
'''

NOMENCLTURE_WITH_PRICE ='''
–¶–µ–Ω—ã –∑–∞ –≤ —Ä—É–±–ª—è—Ö –∑–∞ 100 –≥—Ä–∞–º–ºüå∞!\n
1) –û—Ä–µ—Ö –∫–µ–¥—Ä–æ–≤—ã–π(–æ—á–∏—â–µ–Ω–Ω—ã–π) \n
2) –û—Ä–µ—Ö –º–∞–∫–∞–¥–∞–º 7,8\n
3) –û—Ä–µ—Ö –≥—Ä–µ—Ü–∫–∏–π (–±–∞–±–æ—á–∫–∞)650\n
4) –ì—Ä–µ—Ü–∫–∏–π –æ—Ä–µ—Ö –æ—á–∏—â–µ–Ω–Ω—ã–π ¬†530\n
5) –ì—Ä–µ—Ü–∫–∏–π –æ—Ä–µ—Ö –Ω–µ –æ—á–∏—â–µ–Ω–Ω—ã–π 300\n
6) –§–∏—Å—Ç–∞—à–∫–∏ –ò—Ä–∞–Ω 1050\n
7) –§–∏—Å—Ç–∞—à–∫–∏ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ 860\n
8) –ú–∏–Ω–¥–∞–ª—å –ò—Ä–∞–Ω 750\n
9) –ú–∏–Ω–¥–∞–ª—å –æ—á–∏—â–µ–Ω–Ω—ã–π ¬†700—Ä\n¬†
10)–ú–∏–Ω–¥–∞–ª—å –Ω–µ –æ—á–∏—â–µ–Ω–∏–π (–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω)550\n
11)–ú–∏–Ω–¥–∞–ª—å –≤ —à–æ–∫–æ–ª–∞–¥–µ 480—Ä\n
12)–ö–µ—à—å—é –æ—á–∏—â–µ–Ω–Ω—ã–π 800—Ä\n
13)–ö–æ–∫–æ—Å –∫—É–±–∏–∫ 640\n
14)–ö–µ—à—å—é –≤ —à–æ–∫–æ–ª–∞–¥–µ 480—Ä\n
15)–§—É–Ω–¥—É–∫ –æ—á–∏—â–µ–Ω–Ω—ã–π 600\n
16)–§—É–Ω–¥—É–∫ –Ω–µ –æ—á–∏—â–µ–Ω–Ω—ã–π 320\n
17)–§—É–Ω–¥—É–∫ –≤ —à–æ–∫–æ–ª–∞–¥–µ 500—Ä\n
18)–û—Ä–µ—Ö –ø–µ–∫–∞–Ω –æ—á–∏—â–µ–Ω–Ω—ã–π 1350\n
19)–û—Ä–µ—Ö –±—Ä–∞–∑–∏–ª—å—Å–∫–∏–π 980\n
20)–ê—Ä–∞—Ö–∏—Å –æ—á–∏—â–µ–Ω–Ω—ã–π ¬†140—Ä\n
21)–ê—Ä–∞—Ö–∏—Å –Ω–µ –æ—á–∏—â–µ–Ω–Ω—ã–π 120—Ä\n
22)–ê—Ä–∞—Ö–∏—Å —Å–æ–ª–µ–Ω–Ω—ã–π 180—Ä¬†\n
23)–ê—Ä–∞—Ö–∏—Å –∂–∞—Ä–µ–Ω. 160—Ä\n
24)–ê—Ä–∞—Ö–∏—Å –≤ –∫—É–Ω–∂—É—Ç–µ 180—Ä\n
25)–ö—É—Ä–∞–≥–∞ –¥–ª—è –∫–æ–º–ø–æ—Ç–∞ 160\n
26)–ö—É—Ä–∞–≥–∞ –æ–±—ã—á–Ω–∞—è 200—Ä\n
27)–ö—É—Ä–∞–≥–∞ –º–µ–¥–æ–≤—ã–π 240\n
28)–ö—É—Ä–∞–≥–∞ –ø—É–≥–æ–≤–∫–∞ 240\n
29)–ö—É—Ä–∞–≥–∞ –ª–æ–¥–∫–∞ 220\n
30)–ö—É—Ä–∞–≥–∞ —Å–∞—Ö–∞—Ä–Ω–∞—è ¬†250—Ä\n
31)–ö—É—Ä–∞–≥–∞ —Ç—É—Ä–µ—Ü–∫–∞—è  320—Ä\n
32)–ö—É—Ä–∞–≥–∞ —à–æ–∫–æ–ª–∞–¥–Ω–∞—è 450—Ä\n
33)–ö—É—Ä–∞–≥–∞ –≤ —à–æ–∫–æ–ª–∞–¥–µ 400—Ä\n
34)–£—Ä—é–∫ –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω 260\n
35)–£—Ä—é–∫ —Ç—É—Ä–µ—Ü–∫–∏–π 350—Ä\n
36)–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ 150\n
37)–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –ø—É–≥–æ–≤–∫–∞ 170\n
38)–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –ú–æ–ª–¥–æ–≤–∞ 240\n
39)–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –ú–æ–ª–¥–æ–≤–∞ —Å –∫–æ—Å—Ç–æ—á–∫–∏ 205\n
40)–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –≤ –±–∞–Ω–∫–µ 500–≥—Ä 200—Ä —à—Ç\n
41)–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –≤ —à–æ–∫–æ–ª–∞–¥–µ  400—Ä \n
42)–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç—Å–∫–∏–π 380\n
43)–ò–Ω–∂–∏—Ä 350—Ä\n
44)–§–∏–Ω–∏–∫–∏ 110—Ä\n
45)–§–∏–Ω–∏–∫ –∑–æ–ª–æ—Ç–æ–π 160\n
46)–§–∏–Ω–∏–∫ —à–æ–∫–æ–ª–∞–¥–Ω–∞—è 260\n
47)–§–∏–Ω–∏–∫–∏ –∫–∞—Å–ø–∏—Ä–∞–Ω 260\n
48)–§–∏–Ω–∏–∫–∏ –¢—É–Ω–∏—Å 250—Ä\n
'''

NUMBER_AND_NAME_NOMENCLATURE = {
    '1': '–û—Ä–µ—Ö –∫–µ–¥—Ä–æ–≤—ã–π 14 –æ—á–∏—â–µ–Ω–Ω—ã–π ',
    '2': '–û—Ä–µ—Ö –º–∞–∫–∞–¥–∞–º 7,8',
    '3': '–û—Ä–µ—Ö –≥—Ä–µ—Ü–∫–∏–π (–±–∞–±–æ—á–∫–∞) 650',
    '4': '–ì—Ä–µ—Ü–∫–∏–π –æ—Ä–µ—Ö –æ—á–∏—â–µ–Ω–Ω—ã–π ¬†530',
    '5': '–ì—Ä–µ—Ü–∫–∏–π –æ—Ä–µ—Ö –Ω–µ –æ—á–∏—â–µ–Ω–Ω—ã–π 300',
    '6': '–§–∏—Å—Ç–∞—à–∫–∏ –ò—Ä–∞–Ω 1050',
    '7': '–§–∏—Å—Ç–∞—à–∫–∏ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ 860',
    '8': '–ú–∏–Ω–¥–∞–ª—å –ò—Ä–∞–Ω 750',
    '9': '–ú–∏–Ω–¥–∞–ª—å –æ—á–∏—â–µ–Ω–Ω—ã–π ¬†700—Ä',
    '10': '–ú–∏–Ω–¥–∞–ª—å –Ω–µ –æ—á–∏—â–µ–Ω–∏–π –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω 550',
    '11': '–ú–∏–Ω–¥–∞–ª—å –≤ —à–æ–∫–æ–ª–∞–¥–µ 480—Ä',
    '12': '–ö–µ—à—å—é –æ—á–∏—â–µ–Ω–Ω—ã–π 800—Ä',
    '13': '–ö–æ–∫–æ—Å –∫—É–±–∏–∫ 640',
    '14': '–ö–µ—à—å—é –≤ —à–æ–∫–æ–ª–∞–¥–µ 480—Ä',
    '15': '–§—É–Ω–¥—É–∫ –æ—á–∏—â–µ–Ω–Ω—ã–π 600',
    '16': '–§—É–Ω–¥—É–∫ –Ω–µ –æ—á–∏—â–µ–Ω–Ω—ã–π 320',
    '17': '–§—É–Ω–¥—É–∫ –≤ —à–æ–∫–æ–ª–∞–¥–µ 500—Ä',
    '18': '–û—Ä–µ—Ö –ø–µ–∫–∞–Ω –æ—á–∏—â–µ–Ω–Ω—ã–π 1350',
    '19': '–û—Ä–µ—Ö –±—Ä–∞–∑–∏–ª—å—Å–∫–∏–π 980',
    '20': '–ê—Ä–∞—Ö–∏—Å –æ—á–∏—â–µ–Ω–Ω—ã–π ¬†140—Ä',
    '21': '–ê—Ä–∞—Ö–∏—Å –Ω–µ –æ—á–∏—â–µ–Ω–Ω—ã–π 120—Ä',
    '22': '–ê—Ä–∞—Ö–∏—Å —Å–æ–ª–µ–Ω–Ω—ã–π 180—Ä¬†',
    '23': '–ê—Ä–∞—Ö–∏—Å –∂–∞—Ä–µ–Ω. 160—Ä',
    '24': '–ê—Ä–∞—Ö–∏—Å –≤ –∫—É–Ω–∂—É—Ç–µ 180—Ä',
    '25': '–ö—É—Ä–∞–≥–∞ –¥–ª—è –∫–æ–º–ø–æ—Ç–∞ 160',
    '26': '–ö—É—Ä–∞–≥–∞ –æ–±—ã—á–Ω–∞—è 200—Ä',
    '27': '–ö—É—Ä–∞–≥–∞ –º–µ–¥–æ–≤—ã–π 240',
    '28': '–ö—É—Ä–∞–≥–∞ –ø—É–≥–æ–≤–∫–∞ 240',
    '29': '–ö—É—Ä–∞–≥–∞ –ª–æ–¥–∫–∞ 220',
    '30': '–ö—É—Ä–∞–≥–∞ —Å–∞—Ö–∞—Ä–Ω–∞—è ¬†250—Ä',
    '31': '–ö—É—Ä–∞–≥–∞ —Ç—É—Ä–µ—Ü–∫–∞—è  320—Ä',
    '32': '–ö—É—Ä–∞–≥–∞ —à–æ–∫–æ–ª–∞–¥–Ω–∞—è 450—Ä',
    '33': '–ö—É—Ä–∞–≥–∞ –≤ —à–æ–∫–æ–ª–∞–¥–µ 400—Ä',
    '34': '–£—Ä—é–∫ –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω 260',
    '35': '–£—Ä—é–∫ —Ç—É—Ä–µ—Ü–∫–∏–π 350—Ä',
    '36': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ 150',
    '37': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –ø—É–≥–æ–≤–∫–∞ 170',
    '38': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –ú–æ–ª–¥–æ–≤–∞ 240',
    '39': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –ú–æ–ª–¥–æ–≤–∞ —Å –∫–æ—Å—Ç–æ—á–∫–∏ 205',
    '40': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –≤ –±–∞–Ω–∫–µ 500–≥—Ä 200—Ä —à—Ç',
    '41': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –≤ —à–æ–∫–æ–ª–∞–¥–µ  400—Ä ',
    '42': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç—Å–∫–∏–π 380',
    '43': '–ò–Ω–∂–∏—Ä 350—Ä',
    '44': '–§–∏–Ω–∏–∫–∏ 110—Ä',
    '45': '–§–∏–Ω–∏–∫ –∑–æ–ª–æ—Ç–æ–π 160',
    '46': '–§–∏–Ω–∏–∫ —à–æ–∫–æ–ª–∞–¥–Ω–∞—è 260',
    '47': '–§–∏–Ω–∏–∫–∏ –∫–∞—Å–ø–∏—Ä–∞–Ω 260',
    '48': '–§–∏–Ω–∏–∫–∏ –¢—É–Ω–∏—Å 250—Ä'
}

NUMBER_AND_PRICE_NOMENCLATURE = {str(item): random.randint(1, 20) for item in range(1, 70)}
# {
# '1': 14,
# '2': 7.8,
# '3': 6.50,
# '4': 5.30,
# '5': '–ì—Ä–µ—Ü–∫–∏–π –æ—Ä–µ—Ö –Ω–µ –æ—á–∏—â–µ–Ω–Ω—ã–π 300',
# '6': '–§–∏—Å—Ç–∞—à–∫–∏ –ò—Ä–∞–Ω 1050',
# '7': '–§–∏—Å—Ç–∞—à–∫–∏ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ 860',
# '8': '–ú–∏–Ω–¥–∞–ª—å –ò—Ä–∞–Ω 750',
# '9': '–ú–∏–Ω–¥–∞–ª—å –æ—á–∏—â–µ–Ω–Ω—ã–π ¬†700—Ä',
# '10': '–ú–∏–Ω–¥–∞–ª—å –Ω–µ –æ—á–∏—â–µ–Ω–∏–π –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω 550',
# '11': '–ú–∏–Ω–¥–∞–ª—å –≤ —à–æ–∫–æ–ª–∞–¥–µ 480—Ä',
# '12': '–ö–µ—à—å—é –æ—á–∏—â–µ–Ω–Ω—ã–π 800—Ä',
# '13': '–ö–æ–∫–æ—Å –∫—É–±–∏–∫ 640',
# '14': '–ö–µ—à—å—é –≤ —à–æ–∫–æ–ª–∞–¥–µ 480—Ä',
# '15': '–§—É–Ω–¥—É–∫ –æ—á–∏—â–µ–Ω–Ω—ã–π 600',
# '16': '–§—É–Ω–¥—É–∫ –Ω–µ –æ—á–∏—â–µ–Ω–Ω—ã–π 320',
# '17': '–§—É–Ω–¥—É–∫ –≤ —à–æ–∫–æ–ª–∞–¥–µ 500—Ä',
# '18': '–û—Ä–µ—Ö –ø–µ–∫–∞–Ω –æ—á–∏—â–µ–Ω–Ω—ã–π 1350',
# '19': '–û—Ä–µ—Ö –±—Ä–∞–∑–∏–ª—å—Å–∫–∏–π 980',
# '20': '–ê—Ä–∞—Ö–∏—Å –æ—á–∏—â–µ–Ω–Ω—ã–π ¬†140—Ä',
# '21': '–ê—Ä–∞—Ö–∏—Å –Ω–µ –æ—á–∏—â–µ–Ω–Ω—ã–π 120—Ä',
# '22': '–ê—Ä–∞—Ö–∏—Å —Å–æ–ª–µ–Ω–Ω—ã–π 180—Ä¬†',
# '23': '–ê—Ä–∞—Ö–∏—Å –∂–∞—Ä–µ–Ω. 160—Ä',
# '24': '–ê—Ä–∞—Ö–∏—Å –≤ –∫—É–Ω–∂—É—Ç–µ 180—Ä',
# '25': '–ö—É—Ä–∞–≥–∞ –¥–ª—è –∫–æ–º–ø–æ—Ç–∞ 160',
# '26': '–ö—É—Ä–∞–≥–∞ –æ–±—ã—á–Ω–∞—è 200—Ä',
# '27': '–ö—É—Ä–∞–≥–∞ –º–µ–¥–æ–≤—ã–π 240',
# '28': '–ö—É—Ä–∞–≥–∞ –ø—É–≥–æ–≤–∫–∞ 240',
# '29': '–ö—É—Ä–∞–≥–∞ –ª–æ–¥–∫–∞ 220',
# '30': '–ö—É—Ä–∞–≥–∞ —Å–∞—Ö–∞—Ä–Ω–∞—è ¬†250—Ä',
# '31': '–ö—É—Ä–∞–≥–∞ —Ç—É—Ä–µ—Ü–∫–∞—è  320—Ä',
# '32': '–ö—É—Ä–∞–≥–∞ —à–æ–∫–æ–ª–∞–¥–Ω–∞—è 450—Ä',
# '33': '–ö—É—Ä–∞–≥–∞ –≤ —à–æ–∫–æ–ª–∞–¥–µ 400—Ä',
# '34': '–£—Ä—é–∫ –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω 260',
# '35': '–£—Ä—é–∫ —Ç—É—Ä–µ—Ü–∫–∏–π 350—Ä',
# '36': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ 150',
# '37': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –ø—É–≥–æ–≤–∫–∞ 170',
# '38': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –ú–æ–ª–¥–æ–≤–∞ 240',
# '39': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –ú–æ–ª–¥–æ–≤–∞ —Å –∫–æ—Å—Ç–æ—á–∫–∏ 205',
# '40': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –≤ –±–∞–Ω–∫–µ 500–≥—Ä 200—Ä —à—Ç',
# '41': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –≤ —à–æ–∫–æ–ª–∞–¥–µ  400—Ä ',
# '42': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç—Å–∫–∏–π 380',
# '43': '–ò–Ω–∂–∏—Ä 350—Ä',
# '44': '–§–∏–Ω–∏–∫–∏ 110—Ä',
# '45': '–§–∏–Ω–∏–∫ –∑–æ–ª–æ—Ç–æ–π 160',
# '46': '–§–∏–Ω–∏–∫ —à–æ–∫–æ–ª–∞–¥–Ω–∞—è 260',
# '47': '–§–∏–Ω–∏–∫–∏ –∫–∞—Å–ø–∏—Ä–∞–Ω 260',
# '48': '–§–∏–Ω–∏–∫–∏ –¢—É–Ω–∏—Å 250—Ä'
# }
#
#
# def write_json(data, filename='answer.json'):
#     with open(filename, 'w') as f:
#         json.dump(data, f, indent=2, ensure_ascii=False)
#
#
# def get_updates():
#     url = '{0}{1}'.format(URL, 'getUpdates')
#     r = requests.get(url)
#     # write_json(r.json())
#     return r.json()
#
https_proxy = "https://136.243.47.220:3128"

proxy_dict = {
    "https": https_proxy
}


def send_message(chat_id, text='bla-bla-bla'):
    url = '{0}{1}'.format(URL, 'sendMessage')
    answer = {'chat_id': chat_id, 'text': text}
    r = requests.post(url, json=answer, proxies=proxy_dict)
    return r.json()
#
#
# def parse_text(text):
#     pattern = r'/\w+'
#     crypto = re.search(pattern, text).group()
#     return crypto[1:]
#
#
# def get_price(crypto):
#     url = 'https://api.coinmarketcap.com/v1/ticker/{}'.format(crypto)
#     r = requests.get(url)
#     if r.status_code == 200:
#         r = r.json()
#     else:
#         r = [{'price_usd': '–ù–µ –≤–µ—Ä–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã '}]
#     price = r[-1]['price_usd']
#     write_json(r, filename='price.json')
#     return price


def get_result_text(message):
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Ç–æ–≤–∞—Ä–∞, –≤–≤–µ–¥–µ–Ω—ãx –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≥—Ä–∞–º–º, —Ü–µ–Ω–æ–π —Å —É—á–µ—Ç–æ–º –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –≥—Ä–∞–º–º. –ò—Ç–æ–≥–æ–≤—É—é —Ü–µ–Ω—É.

    Args:
        message(str): –°–æ–æ–±—â–µ–Ω–∏–µ —Ç–∏–ø–∞ '1*100+32*200'.

    Returns:
        str
    """
    result_list = []
    total_price = 0

    message = message.replace(' ', '')
    list_part_message = message.split('+')

    for part_message in list_part_message:
        part_message = part_message.split('*')
        number_nomenclature = part_message[0]
        gramm = part_message[1]
        gramm_int = int(gramm)
        price = gramm_int * NUMBER_AND_PRICE_NOMENCLATURE.get(number_nomenclature)
        result_list.append('{0} {1} –≥—Ä–∞–º–º –¶–µ–Ω–∞:{2} —Ä—É–±'.format(NUMBER_AND_NAME_NOMENCLATURE.get(number_nomenclature),
                                                               gramm, str(price)))
        total_price += price

    result_list.append('–°—Ç–æ–∏–º–æ—Å—Ç—å –≤—Å–µ–≥–æ –∑–∞–∫–∞–∑–∞: {0} —Ä—É–±.'.format(total_price))
    result_list.append('–ó–∞–∫–∞–∑–∞—Ç—å? –î–∞/–ù–µ—Ç?')
    result = '\n'.join(result_list)
    return result


@app.route('/', methods=['POST', 'GET'])
def index():
    if request.method == 'POST':
        r = request.get_json()
        chat_id = r['message']['chat']['id']
        message = r['message']['text']

        if message == '/start':
            send_message(chat_id, text=TEXT_INSTRUCTIONS)
        elif message == '/list':
            send_message(chat_id, text=NOMENCLTURE_WITH_PRICE)
        elif '*' in message:
            result_text = get_result_text(message)
            send_message(chat_id, text=result_text)
    return '<h1>Bot welcomes you</h1>'


if __name__ == '__main__':
    app.run()
