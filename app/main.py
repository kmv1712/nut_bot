import requests
import random
import json
import os

from flask import Flask
from flask import request
from flask import jsonify

# from flask_sslify import SSLify


app = Flask(__name__)
# sslify = SSLify(app)

TOKEN=''
URL = 'https://api.telegram.org/bot{0}/'.format(TOKEN)

TEXT_INSTRUCTIONS = '''
–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —ç—Ç–æ —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç \n
–¥–ª—è –∑–∞–∫–∞–∑–∞ —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç–æ–≤.\n
\n
–ß—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑:\n

1) –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /list\n

2) –í—ã–±–∏—Ä–∞–µ—Ç–µ –Ω–æ–º–µ—Ä —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç–∞\n
   –∏–∑ —Å–ø–∏—Å–∫–∞.\n
 \n
–ù–∞–ø—Ä–∏–º–µ—Ä: –ö—É—Ä–∞–≥–∞ —Å –Ω–æ–º–µ—Ä–æ–º 26\n
–∏ —É–º–Ω–æ–∂–∞–µ—Ç–µ –Ω–∞ 200 –≥—Ä–∞–º–º:\n
26*200\n
–µ—Å–ª–∏ –≤–∞–º –Ω—É–∂–µ–Ω –Ω–∞–ø—Ä–∏–º–µ—Ä –µ—â–µ\n
–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ (36) 100 –≥—Ä–∞–º–º\n
—Ç–æ –ø–∏—à–∏—Ç–µ:\n
+ 36*100\n
3) –í –∫–æ–Ω—Ü–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —É–∫–∞–∂–∏—Ç–µ\n
   –º–µ—Å—Ç–æ –∫—É–¥–∞ –¥–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä.\n
   (–î–æ—Å—Ç–∞–≤–∫–∞ —Ç–æ–ª—å–∫–æ –ø–æ –≥.–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥)\n
  \n 
4) –í –∏—Ç–æ–≥–µ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n
1*200+2*100 –õ–µ–Ω–∏–Ω–∞ 32, –∫–≤.40 \n
\n
–∏–ª–∏ 
\n
1*200+2*100 –õ–µ–Ω–∏–Ω–∞ 32 –ø–æ–¥—ä–µ–∑–¥ ‚Ññ1\n
\n
5) –ü–æ—Å–ª–µ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n 
\n
    –í—ã –∑–∞–∫–∞–∑–∞–ª–∏:\n
    –ö—É—Ä–∞–≥–∞ 200 –≥—Ä –¶–µ–Ω–∞: 100 —Ä—É–±.\n
    –ß–µ—Ä–Ω–æ—Å–ª–∏–≤ 100 –≥—Ä –¶–µ–Ω–∞: 100 —Ä—É–±.\n 
    –û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞: 200 —Ä—É–±.\n
    \n
    –ë—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –∞–¥—Ä–µ—Å—É:\n
    –õ–µ–Ω–∏–Ω–∞ 32 –ø–æ–¥—ä–µ–∑–¥ ‚Ññ1\n
    \n
    –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑?–î–∞/–ù–µ—Ç\n
    \n
6) –ü—Ä–∏ –≤—ã–±–æ—Ä–µ –î–∞ –ø–æ–ª—É—á–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n
\n
    –ö–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å —Ç–æ–≤–∞—Ä?\n
    (–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ü–∏—Ñ—Ä—É)\n
    1.–û–ø–ª–∞—Ç–∏—Ç—å –æ–Ω–ª–∞–π–Ω\n
    2.–ù–∞–ª–∏—á–Ω—ã–º–∏ –∫—É—Ä—å–µ—Ä—É\n
    3.–ë–∞–Ω–∫–æ–≤—Å–æ–π –∫–∞—Ä—Ç–æ–π –∫—É—Ä—å–µ—Ä—É\n
    \n
7) –ü—Ä–∏ –≤—ã–±–æ—Ä–µ 2 –∏–ª–∏ 3 –ø–æ–ª—É—á–∏—Ç–µ\n 
—Å–æ–æ–±—â–µ–Ω–∏–µ\n
\n
 –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç. ‚Ññ 321\n
 –°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑!\n
'''

TEXT_PAYMENT_METHOD = '''
–ö–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å —Ç–æ–≤–∞—Ä?\n
(–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ü–∏—Ñ—Ä—É)\n
1 –û–ø–ª–∞—Ç–∏—Ç—å –æ–Ω–ª–∞–π–Ω\n
2 –ù–∞–ª–∏—á–Ω—ã–º–∏ –∫—É—Ä—å–µ—Ä—É\n
3 –ë–∞–Ω–∫–æ–≤—Å–æ–π –∫–∞—Ä—Ç–æ–π –∫—É—Ä—å–µ—Ä—É\n
\n'''

TOTAL_PRICE_ADDRESS = '''
–û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞: {0} —Ä—É–±.\n
\n
–ë—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –∞–¥—Ä–µ—Å—É:\n
{1}\n
\n
–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑?–î–∞/–ù–µ—Ç'''

NOMENCLTURE_WITH_PRICE = '''
–¶–µ–Ω—ã –∑–∞ –≤ —Ä—É–±–ª—è—Ö –∑–∞ 100 –≥—Ä–∞–º–ºüå∞!\n
1) –û—Ä–µ—Ö –∫–µ–¥—Ä–æ–≤—ã–π(–æ—á–∏—â–µ–Ω–Ω—ã–π) \n
2) –û—Ä–µ—Ö –º–∞–∫–∞–¥–∞–º 7,8\n
3) –û—Ä–µ—Ö –≥—Ä–µ—Ü–∫–∏–π (–±–∞–±–æ—á–∫–∞)650\n
4) –ì—Ä–µ—Ü–∫–∏–π –æ—Ä–µ—Ö –æ—á–∏—â–µ–Ω–Ω—ã–π ¬†530\n
5) –ì—Ä–µ—Ü–∫–∏–π –æ—Ä–µ—Ö –Ω–µ –æ—á–∏—â–µ–Ω–Ω—ã–π 300\n
6) –§–∏—Å—Ç–∞—à–∫–∏ –ò—Ä–∞–Ω 1050\n
7) –§–∏—Å—Ç–∞—à–∫–∏ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ 860\n
8) –ú–∏–Ω–¥–∞–ª—å –ò—Ä–∞–Ω 750\n
9) –ú–∏–Ω–¥–∞–ª—å –æ—á–∏—â–µ–Ω–Ω—ã–π ¬†700—Ä\n¬†
10)–ú–∏–Ω–¥–∞–ª—å –Ω–µ –æ—á–∏—â–µ–Ω–∏–π (–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω)550\n
11)–ú–∏–Ω–¥–∞–ª—å –≤ —à–æ–∫–æ–ª–∞–¥–µ 480—Ä\n
12)–ö–µ—à—å—é –æ—á–∏—â–µ–Ω–Ω—ã–π 800—Ä\n
13)–ö–æ–∫–æ—Å –∫—É–±–∏–∫ 640\n
14)–ö–µ—à—å—é –≤ —à–æ–∫–æ–ª–∞–¥–µ 480—Ä\n
15)–§—É–Ω–¥—É–∫ –æ—á–∏—â–µ–Ω–Ω—ã–π 600\n
16)–§—É–Ω–¥—É–∫ –Ω–µ –æ—á–∏—â–µ–Ω–Ω—ã–π 320\n
17)–§—É–Ω–¥—É–∫ –≤ —à–æ–∫–æ–ª–∞–¥–µ 500—Ä\n
18)–û—Ä–µ—Ö –ø–µ–∫–∞–Ω –æ—á–∏—â–µ–Ω–Ω—ã–π 1350\n
19)–û—Ä–µ—Ö –±—Ä–∞–∑–∏–ª—å—Å–∫–∏–π 980\n
20)–ê—Ä–∞—Ö–∏—Å –æ—á–∏—â–µ–Ω–Ω—ã–π ¬†140—Ä\n
21)–ê—Ä–∞—Ö–∏—Å –Ω–µ –æ—á–∏—â–µ–Ω–Ω—ã–π 120—Ä\n
22)–ê—Ä–∞—Ö–∏—Å —Å–æ–ª–µ–Ω–Ω—ã–π 180—Ä¬†\n
23)–ê—Ä–∞—Ö–∏—Å –∂–∞—Ä–µ–Ω. 160—Ä\n
24)–ê—Ä–∞—Ö–∏—Å –≤ –∫—É–Ω–∂—É—Ç–µ 180—Ä\n
25)–ö—É—Ä–∞–≥–∞ –¥–ª—è –∫–æ–º–ø–æ—Ç–∞ 160\n
26)–ö—É—Ä–∞–≥–∞ –æ–±—ã—á–Ω–∞—è 200—Ä\n
27)–ö—É—Ä–∞–≥–∞ –º–µ–¥–æ–≤—ã–π 240\n
28)–ö—É—Ä–∞–≥–∞ –ø—É–≥–æ–≤–∫–∞ 240\n
29)–ö—É—Ä–∞–≥–∞ –ª–æ–¥–∫–∞ 220\n
30)–ö—É—Ä–∞–≥–∞ —Å–∞—Ö–∞—Ä–Ω–∞—è ¬†250—Ä\n
31)–ö—É—Ä–∞–≥–∞ —Ç—É—Ä–µ—Ü–∫–∞—è  320—Ä\n
32)–ö—É—Ä–∞–≥–∞ —à–æ–∫–æ–ª–∞–¥–Ω–∞—è 450—Ä\n
33)–ö—É—Ä–∞–≥–∞ –≤ —à–æ–∫–æ–ª–∞–¥–µ 400—Ä\n
34)–£—Ä—é–∫ –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω 260\n
35)–£—Ä—é–∫ —Ç—É—Ä–µ—Ü–∫–∏–π 350—Ä\n
36)–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ 150\n
37)–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –ø—É–≥–æ–≤–∫–∞ 170\n
38)–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –ú–æ–ª–¥–æ–≤–∞ 240\n
39)–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –ú–æ–ª–¥–æ–≤–∞ —Å –∫–æ—Å—Ç–æ—á–∫–∏ 205\n
40)–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –≤ –±–∞–Ω–∫–µ 500–≥—Ä 200—Ä —à—Ç\n
41)–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –≤ —à–æ–∫–æ–ª–∞–¥–µ  400—Ä \n
42)–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç—Å–∫–∏–π 380\n
43)–ò–Ω–∂–∏—Ä 350—Ä\n
44)–§–∏–Ω–∏–∫–∏ 110—Ä\n
45)–§–∏–Ω–∏–∫ –∑–æ–ª–æ—Ç–æ–π 160\n
46)–§–∏–Ω–∏–∫ —à–æ–∫–æ–ª–∞–¥–Ω–∞—è 260\n
47)–§–∏–Ω–∏–∫–∏ –∫–∞—Å–ø–∏—Ä–∞–Ω 260\n
48)–§–∏–Ω–∏–∫–∏ –¢—É–Ω–∏—Å 250—Ä\n
'''

NUMBER_AND_NAME_NOMENCLATURE = {
    '1': '–û—Ä–µ—Ö –∫–µ–¥—Ä–æ–≤—ã–π 14 –æ—á–∏—â–µ–Ω–Ω—ã–π ',
    '2': '–û—Ä–µ—Ö –º–∞–∫–∞–¥–∞–º 7,8',
    '3': '–û—Ä–µ—Ö –≥—Ä–µ—Ü–∫–∏–π (–±–∞–±–æ—á–∫–∞) 650',
    '4': '–ì—Ä–µ—Ü–∫–∏–π –æ—Ä–µ—Ö –æ—á–∏—â–µ–Ω–Ω—ã–π ¬†530',
    '5': '–ì—Ä–µ—Ü–∫–∏–π –æ—Ä–µ—Ö –Ω–µ –æ—á–∏—â–µ–Ω–Ω—ã–π 300',
    '6': '–§–∏—Å—Ç–∞—à–∫–∏ –ò—Ä–∞–Ω 1050',
    '7': '–§–∏—Å—Ç–∞—à–∫–∏ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ 860',
    '8': '–ú–∏–Ω–¥–∞–ª—å –ò—Ä–∞–Ω 750',
    '9': '–ú–∏–Ω–¥–∞–ª—å –æ—á–∏—â–µ–Ω–Ω—ã–π ¬†700—Ä',
    '10': '–ú–∏–Ω–¥–∞–ª—å –Ω–µ –æ—á–∏—â–µ–Ω–∏–π –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω 550',
    '11': '–ú–∏–Ω–¥–∞–ª—å –≤ —à–æ–∫–æ–ª–∞–¥–µ 480—Ä',
    '12': '–ö–µ—à—å—é –æ—á–∏—â–µ–Ω–Ω—ã–π 800—Ä',
    '13': '–ö–æ–∫–æ—Å –∫—É–±–∏–∫ 640',
    '14': '–ö–µ—à—å—é –≤ —à–æ–∫–æ–ª–∞–¥–µ 480—Ä',
    '15': '–§—É–Ω–¥—É–∫ –æ—á–∏—â–µ–Ω–Ω—ã–π 600',
    '16': '–§—É–Ω–¥—É–∫ –Ω–µ –æ—á–∏—â–µ–Ω–Ω—ã–π 320',
    '17': '–§—É–Ω–¥—É–∫ –≤ —à–æ–∫–æ–ª–∞–¥–µ 500—Ä',
    '18': '–û—Ä–µ—Ö –ø–µ–∫–∞–Ω –æ—á–∏—â–µ–Ω–Ω—ã–π 1350',
    '19': '–û—Ä–µ—Ö –±—Ä–∞–∑–∏–ª—å—Å–∫–∏–π 980',
    '20': '–ê—Ä–∞—Ö–∏—Å –æ—á–∏—â–µ–Ω–Ω—ã–π ¬†140—Ä',
    '21': '–ê—Ä–∞—Ö–∏—Å –Ω–µ –æ—á–∏—â–µ–Ω–Ω—ã–π 120—Ä',
    '22': '–ê—Ä–∞—Ö–∏—Å —Å–æ–ª–µ–Ω–Ω—ã–π 180—Ä¬†',
    '23': '–ê—Ä–∞—Ö–∏—Å –∂–∞—Ä–µ–Ω. 160—Ä',
    '24': '–ê—Ä–∞—Ö–∏—Å –≤ –∫—É–Ω–∂—É—Ç–µ 180—Ä',
    '25': '–ö—É—Ä–∞–≥–∞ –¥–ª—è –∫–æ–º–ø–æ—Ç–∞ 160',
    '26': '–ö—É—Ä–∞–≥–∞ –æ–±—ã—á–Ω–∞—è 200—Ä',
    '27': '–ö—É—Ä–∞–≥–∞ –º–µ–¥–æ–≤—ã–π 240',
    '28': '–ö—É—Ä–∞–≥–∞ –ø—É–≥–æ–≤–∫–∞ 240',
    '29': '–ö—É—Ä–∞–≥–∞ –ª–æ–¥–∫–∞ 220',
    '30': '–ö—É—Ä–∞–≥–∞ —Å–∞—Ö–∞—Ä–Ω–∞—è ¬†250—Ä',
    '31': '–ö—É—Ä–∞–≥–∞ —Ç—É—Ä–µ—Ü–∫–∞—è  320—Ä',
    '32': '–ö—É—Ä–∞–≥–∞ —à–æ–∫–æ–ª–∞–¥–Ω–∞—è 450—Ä',
    '33': '–ö—É—Ä–∞–≥–∞ –≤ —à–æ–∫–æ–ª–∞–¥–µ 400—Ä',
    '34': '–£—Ä—é–∫ –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω 260',
    '35': '–£—Ä—é–∫ —Ç—É—Ä–µ—Ü–∫–∏–π 350—Ä',
    '36': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ 150',
    '37': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –ø—É–≥–æ–≤–∫–∞ 170',
    '38': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –ú–æ–ª–¥–æ–≤–∞ 240',
    '39': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –ú–æ–ª–¥–æ–≤–∞ —Å –∫–æ—Å—Ç–æ—á–∫–∏ 205',
    '40': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –≤ –±–∞–Ω–∫–µ 500–≥—Ä 200—Ä —à—Ç',
    '41': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –≤ —à–æ–∫–æ–ª–∞–¥–µ  400—Ä ',
    '42': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç—Å–∫–∏–π 380',
    '43': '–ò–Ω–∂–∏—Ä 350—Ä',
    '44': '–§–∏–Ω–∏–∫–∏ 110—Ä',
    '45': '–§–∏–Ω–∏–∫ –∑–æ–ª–æ—Ç–æ–π 160',
    '46': '–§–∏–Ω–∏–∫ —à–æ–∫–æ–ª–∞–¥–Ω–∞—è 260',
    '47': '–§–∏–Ω–∏–∫–∏ –∫–∞—Å–ø–∏—Ä–∞–Ω 260',
    '48': '–§–∏–Ω–∏–∫–∏ –¢—É–Ω–∏—Å 250—Ä'
}

NUMBER_AND_PRICE_NOMENCLATURE = {str(item): random.randint(1, 20) for item in range(1, 70)}


# {
# '1': 14,
# '2': 7.8,
# '3': 6.50,
# '4': 5.30,
# '5': '–ì—Ä–µ—Ü–∫–∏–π –æ—Ä–µ—Ö –Ω–µ –æ—á–∏—â–µ–Ω–Ω—ã–π 300',
# '6': '–§–∏—Å—Ç–∞—à–∫–∏ –ò—Ä–∞–Ω 1050',
# '7': '–§–∏—Å—Ç–∞—à–∫–∏ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ 860',
# '8': '–ú–∏–Ω–¥–∞–ª—å –ò—Ä–∞–Ω 750',
# '9': '–ú–∏–Ω–¥–∞–ª—å –æ—á–∏—â–µ–Ω–Ω—ã–π ¬†700—Ä',
# '10': '–ú–∏–Ω–¥–∞–ª—å –Ω–µ –æ—á–∏—â–µ–Ω–∏–π –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω 550',
# '11': '–ú–∏–Ω–¥–∞–ª—å –≤ —à–æ–∫–æ–ª–∞–¥–µ 480—Ä',
# '12': '–ö–µ—à—å—é –æ—á–∏—â–µ–Ω–Ω—ã–π 800—Ä',
# '13': '–ö–æ–∫–æ—Å –∫—É–±–∏–∫ 640',
# '14': '–ö–µ—à—å—é –≤ —à–æ–∫–æ–ª–∞–¥–µ 480—Ä',
# '15': '–§—É–Ω–¥—É–∫ –æ—á–∏—â–µ–Ω–Ω—ã–π 600',
# '16': '–§—É–Ω–¥—É–∫ –Ω–µ –æ—á–∏—â–µ–Ω–Ω—ã–π 320',
# '17': '–§—É–Ω–¥—É–∫ –≤ —à–æ–∫–æ–ª–∞–¥–µ 500—Ä',
# '18': '–û—Ä–µ—Ö –ø–µ–∫–∞–Ω –æ—á–∏—â–µ–Ω–Ω—ã–π 1350',
# '19': '–û—Ä–µ—Ö –±—Ä–∞–∑–∏–ª—å—Å–∫–∏–π 980',
# '20': '–ê—Ä–∞—Ö–∏—Å –æ—á–∏—â–µ–Ω–Ω—ã–π ¬†140—Ä',
# '21': '–ê—Ä–∞—Ö–∏—Å –Ω–µ –æ—á–∏—â–µ–Ω–Ω—ã–π 120—Ä',
# '22': '–ê—Ä–∞—Ö–∏—Å —Å–æ–ª–µ–Ω–Ω—ã–π 180—Ä¬†',
# '23': '–ê—Ä–∞—Ö–∏—Å –∂–∞—Ä–µ–Ω. 160—Ä',
# '24': '–ê—Ä–∞—Ö–∏—Å –≤ –∫—É–Ω–∂—É—Ç–µ 180—Ä',
# '25': '–ö—É—Ä–∞–≥–∞ –¥–ª—è –∫–æ–º–ø–æ—Ç–∞ 160',
# '26': '–ö—É—Ä–∞–≥–∞ –æ–±—ã—á–Ω–∞—è 200—Ä',
# '27': '–ö—É—Ä–∞–≥–∞ –º–µ–¥–æ–≤—ã–π 240',
# '28': '–ö—É—Ä–∞–≥–∞ –ø—É–≥–æ–≤–∫–∞ 240',
# '29': '–ö—É—Ä–∞–≥–∞ –ª–æ–¥–∫–∞ 220',
# '30': '–ö—É—Ä–∞–≥–∞ —Å–∞—Ö–∞—Ä–Ω–∞—è ¬†250—Ä',
# '31': '–ö—É—Ä–∞–≥–∞ —Ç—É—Ä–µ—Ü–∫–∞—è  320—Ä',
# '32': '–ö—É—Ä–∞–≥–∞ —à–æ–∫–æ–ª–∞–¥–Ω–∞—è 450—Ä',
# '33': '–ö—É—Ä–∞–≥–∞ –≤ —à–æ–∫–æ–ª–∞–¥–µ 400—Ä',
# '34': '–£—Ä—é–∫ –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω 260',
# '35': '–£—Ä—é–∫ —Ç—É—Ä–µ—Ü–∫–∏–π 350—Ä',
# '36': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ 150',
# '37': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –ø—É–≥–æ–≤–∫–∞ 170',
# '38': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –ú–æ–ª–¥–æ–≤–∞ 240',
# '39': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –ú–æ–ª–¥–æ–≤–∞ —Å –∫–æ—Å—Ç–æ—á–∫–∏ 205',
# '40': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –≤ –±–∞–Ω–∫–µ 500–≥—Ä 200—Ä —à—Ç',
# '41': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –≤ —à–æ–∫–æ–ª–∞–¥–µ  400—Ä ',
# '42': '–ß–µ—Ä–Ω–æ—Å–ª–∏–≤ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç—Å–∫–∏–π 380',
# '43': '–ò–Ω–∂–∏—Ä 350—Ä',
# '44': '–§–∏–Ω–∏–∫–∏ 110—Ä',
# '45': '–§–∏–Ω–∏–∫ –∑–æ–ª–æ—Ç–æ–π 160',
# '46': '–§–∏–Ω–∏–∫ —à–æ–∫–æ–ª–∞–¥–Ω–∞—è 260',
# '47': '–§–∏–Ω–∏–∫–∏ –∫–∞—Å–ø–∏—Ä–∞–Ω 260',
# '48': '–§–∏–Ω–∏–∫–∏ –¢—É–Ω–∏—Å 250—Ä'
# }


def write_json(chat_id, dict_info_about_user, filename='orders.json'):
    list_orders = []
    dict_orders = {}

    if os.path.exists('orders.json'):
        with open('orders.json', 'r') as f:
            dict_orders = json.loads(f.read())

    i = 0
    for i in range(1, 1000):
        if i in [item.get('number_order') for item in dict_orders.get(str(chat_id)) or []]:
            continue
        dict_info_about_user['number_order'] = i
        break

    list_orders.append(dict_info_about_user)
    dict_orders[str(chat_id)] = list_orders

    with open(filename, 'w') as f:
        f.write(json.dumps(dict_orders))

    return i


https_proxy = "https://136.243.47.220:3128"

proxy_dict = {
    "https": https_proxy
}


def send_message(chat_id, text=''):
    url = '{0}{1}'.format(URL, 'sendMessage')
    answer = {'chat_id': chat_id, 'text': text}
    r = requests.post(url, json=answer, proxies=proxy_dict)
    return r.json()


def get_result_text(dict_info_about_user):
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Ç–æ–≤–∞—Ä–∞, –≤–≤–µ–¥–µ–Ω—ãx –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≥—Ä–∞–º–º, —Ü–µ–Ω–æ–π —Å —É—á–µ—Ç–æ–º –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –≥—Ä–∞–º–º. –ò—Ç–æ–≥–æ–≤—É—é —Ü–µ–Ω—É.

    Args:
        dict_info_about_user(dict): –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –µ–≥–æ –∑–∞–∫–∞–∑–µ –∏ –∞–¥—Ä–µ—Å–µ –¥–æ—Å—Ç–∞–≤–∫–∏.

    Returns:
        str
    """
    list_result_text = []
    for item in dict_info_about_user.get('ordered_nomenclatures') or []:
        list_result_text.append('{0} {1} –≥—Ä–∞–º–º –¶–µ–Ω–∞:{2} —Ä—É–±\n'.format(item.get('name_nomenclature'),
                                                                      str(item.get('weight')),
                                                                      str(item.get('price'))))

    list_result_text.append(TOTAL_PRICE_ADDRESS.format(str(dict_info_about_user.get('total_price')),
                                                       str(dict_info_about_user.get('address'))))
    result = '\n'.join(list_result_text)
    return result


def get_dict_info_about_user(r):
    dict_info_user = {
        'first_name': r.get('message', {}).get('from', {}).get('first_name'),
        'last_name': r.get('message', {}).get('from', {}).get('last_name'),
        'id': r.get('message', {}).get('from', {}).get('id'),
        'date': r.get('message', {}).get('date'),
        'text': r.get('message', {}).get('text')
    }
    return dict_info_user


def get_dict_info_about_user_with_order_total_price(dict_info_about_user):
    address = ''
    order = ''
    message = (dict_info_about_user.get('text') or '')

    # –ü–æ–ª—É—á–∏–º –∞–¥—Ä–µ—Å—Å –∏ —Ç–µ–∫—Å—Ç —Å 1*100+2*300
    for i, item in enumerate(message):
        if item.isalpha():
            order = message[0:i]
            address = message[i:len(message)]
            dict_info_about_user['address'] = address
            break

    order_without_spaces = message.replace(' ', '') if not order else order.replace(' ', '')

    list_part_order = order_without_spaces.split('+')

    ordered_nomenclatures = []
    total_price = 0
    for part_order in list_part_order or []:
        part_order = part_order.split('*')
        number_nomenclature = part_order[0]
        gramm = part_order[1]
        gramm_int = int(gramm)
        price = gramm_int * NUMBER_AND_PRICE_NOMENCLATURE.get(number_nomenclature)
        info_about_ordered_nomenclature = {
            'name_nomenclature': NUMBER_AND_NAME_NOMENCLATURE.get(number_nomenclature),
            'weight': gramm,
            'price': price
        }
        ordered_nomenclatures.append(info_about_ordered_nomenclature)
        total_price += price

    dict_info_about_user['ordered_nomenclatures'] = ordered_nomenclatures
    dict_info_about_user['total_price'] = total_price

    return dict_info_about_user


def write_json_del(chat_id):
    dict_orders = {}
    if not os.path.exists('orders.json'):
        return

    with open('orders.json', 'r') as f:
        dict_orders = json.loads(f.read())
        list_orders = dict_orders.get(str(chat_id))
        if not list_orders:
            return
        list_orders.pop()

    with open('orders.json', 'w') as f:
        f.write(json.dumps(dict_orders))


def write_json_add_payment_method(chat_id, message):
    dict_orders = {}
    if not os.path.exists('orders.json'):
        return

    with open('orders.json', 'r') as f:
        dict_orders = json.loads(f.read())
        list_orders = dict_orders.get(str(chat_id))
        if not list_orders:
            return
        message = message.replace(' ', '')
        try:
            message = int(message)
        except (TypeError, ValueError):
            message = 0
        list_orders[-1]['payment_method'] = message
        number_order = list_orders[-1].get('number_order')

    with open('orders.json', 'w') as f:
        f.write(json.dumps(dict_orders))

    return number_order


@app.route('/', methods=['POST', 'GET'])
def index():
    if request.method == 'POST':
        r = request.get_json()
        chat_id = r['message']['chat']['id']
        message = r['message']['text']

        if message == '/start':
            send_message(chat_id, text=TEXT_INSTRUCTIONS)
        elif message == '/list':
            send_message(chat_id, text=NOMENCLTURE_WITH_PRICE)
        elif '*' in message:
            dict_info_about_user = get_dict_info_about_user(r)
            dict_info_about_user = get_dict_info_about_user_with_order_total_price(dict_info_about_user)
            write_json(chat_id, dict_info_about_user)
            result_text = get_result_text(dict_info_about_user)
            send_message(chat_id, text=result_text)
        elif '–î–∞' == (message or '').replace(' ', ''):
            send_message(chat_id, text=TEXT_PAYMENT_METHOD)

        elif '–ù–µ—Ç' == (message or '').replace(' ', ''):
            write_json_del(chat_id)
            send_message(chat_id, text='''–í–∞—à –∑–∞–∫–∞–∑ –Ω–µ –ø—Ä–∏–Ω—è—Ç''')
        elif '1' == (message or '').replace(' ', ''):
            send_message(chat_id, text='''–ü—Ä–∏–Ω–æ—Å–∏–º –∏–∑–≤–∏–Ω–µ–Ω–∏—è, –¥–∞–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç''')
        elif '2' == (message or '').replace(' ', ''):
            number_order = write_json_add_payment_method(chat_id, message)
            send_message(chat_id, text=('''–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç. ‚Ññ {0}\n –°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑!\n''').format(number_order))
        elif '3' == (message or '').replace(' ', ''):
            number_order = write_json_add_payment_method(chat_id, message)
            send_message(chat_id, text=('''–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç. ‚Ññ {0}\n –°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑!\n''').format(number_order))

    return '<h1>Bot welcomes you</h1>'


if __name__ == '__main__':
    app.run()
